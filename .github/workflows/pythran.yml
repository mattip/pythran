name: Pythran

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  schedule:
  #        ┌───────────── minute (0 - 59)
  #        │ ┌───────────── hour (0 - 23)
  #        │ │ ┌───────────── day of the month (1 - 31)
  #        │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
  #        │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
  #        │ │ │ │ │
  - cron: "0 2 * * 0"

jobs:
  pythran-linux:
    name: Test ubuntu ${{ matrix.python_version[1] }} ${{ matrix.cpp-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]
        cpp-version: [g++-5, clang-5.0]
        python_version:
          - [pypy-3.8-nightly, pypy38]
          - [pypy-3.9-nightly, pypy39]

    timeout-minutes: 160

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python_version[0] }}

    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        repository: serge-sans-paille/pythran
        path: pythran

    - name: Install dependencies
      run: |
        cd pythran
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install ipython nbval pytest-xdist wheel
        pip install git+https://github.com/cython/cython
        sudo apt install libopenblas-dev ${{ matrix.cpp-version }}
    - name: Setup
      run: |
        cd pythran
        python setup.py install
        printf '[commpiler]\nblas=openblas\n' > ~/.pythranrc
    - name: Testing sequential
      run: |
        cd pythran
        export CC=`echo ${{ matrix.cpp-version }} | sed -e 's/g++/gcc/'`
        export CXX=`echo ${{ matrix.cpp-version }} | sed -e 's/clang/clang++/'`
        pytest pythran/tests/test_*.py -v --numprocesses=auto $PYTEST_ARGS
  pythran-windows:
    runs-on: windows-latest
    name: windows pypy3.8 clang
    strategy:
      matrix:
          architectures: [x64]
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: pypy-3.8-nightly
        architecture: ${{ matrix.architecture }}
    - name: Install clang-cl
      run: |
        choco install llvm --yes
        @("C:/Program Files/LLVM/bin") +  (Get-Content $env:GITHUB_PATH) | Set-Content $env:GITHUB_PATH
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        repository: serge-sans-paille/pythran
        path: pythran

    - name: Install dependencies
      run: |
        cd pythran
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install wheel pythran-openblas pytest pytest-timeout
        pip install git+https://github.com/cython/cython
        # pip install scipy  # no wheel availabe, compilation takes too long
    - name: Setup
      run: |
        cd pythran
        python setup.py install
    - name: Testing sequential
      run: |
        cd pythran
        pytest pythran/tests/test_ndarray.py -v --timeout 600
        # pytest pythran/tests/test_scipy.py -v --timeout 600
        pytest pythran/tests/test_base.py -v --timeout 600
        pytest pythran/tests/test_cases.py -v --timeout 600
        pytest pythran/tests/test_advanced.py -v --timeout 600
